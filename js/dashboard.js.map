{"version":3,"sources":["../../../src/UI/js/dashboard.js"],"names":["user","JSON","parse","localStorage","getItem","spinner","document","querySelector","postTable","orderTable","content","dispName","getUserItems","token","config","method","headers","Authorization","postRes","fetch","orderRes","error","postErr","data","posts","json","orderErr","orders","createTable","table","map","item","row","createElement","innerHTML","created_on","split","model","price","status","id","appendChild","loadData","console","log","window","location","replace","classList","add","textContent","first_name","last_name","remove"],"mappings":"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","sourcesContent":["/* global document localStorage fetch window */\nconst user = JSON.parse(localStorage.getItem('user'));\nconst spinner = document.querySelector('.spinner');\nconst postTable = document.querySelector('#post');\nconst orderTable = document.querySelector('#order');\nconst content = document.querySelector('.content');\nconst dispName = document.querySelector('#user-name');\nconst getUserItems = async (token) => {\n  const config = {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${token}` },\n  };\n  try {\n    const postRes = await fetch('https://auto-mart-ng.herokuapp.com/api/v1/car/users/posts', config);\n    const orderRes = await fetch('https://auto-mart-ng.herokuapp.com/api/v1/order', config);\n    const { error: postErr, data: posts } = await postRes.json();\n    const { error: orderErr, data: orders } = await orderRes.json();\n    if (postErr || orderErr) {\n      return { error: { ...postErr, ...orderErr } };\n    }\n    return { posts, orders };\n  } catch (error) {\n    return { error };\n  }\n};\n\nconst createTable = (table, data) => {\n  data.map((item) => {\n    const row = document.createElement('tr');\n    row.innerHTML = `\n            <td>${item.created_on.split('T')[0]}</td>\n            <td>${item.model}</td>\n            <td>${item.price}</td>\n            <td>${item.status}</td>\n            <td> <button class=\"btn btn-danger\">\n              <a href=\"update-car-price.html?car_id=${item.id}\">\n                View\n              </a>\n            </button>\n            </td>\n        `;\n    table.appendChild(row);\n  });\n};\n\nconst loadData = async () => {\n  const { error, posts, orders } = await getUserItems(user.token);\n  if (error) {\n    console.log(error);\n    return window.location.replace('/sign-in.html');\n  }\n  spinner.classList.add('hide');\n  createTable(postTable, posts);\n  // createTable(orderTable,orders);\n  dispName.textContent = `${user.first_name} ${user.last_name}`;\n  content.classList.remove('hide');\n  console.log(posts, orders);\n};\n\nloadData();\n\n// createTable(postTable, data);\n"],"file":"dashboard.js"}